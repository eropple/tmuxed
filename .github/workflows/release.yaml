on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        deno-target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin

    steps:
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Check out code
        uses: actions/checkout@v2
      - name: caching deps
        run: deno cache --lock=deps-lock.json deps.ts
      - name: compiling executable
        run: deno compile --allow-read --allow-run --target=${{ matrix.deno-target }} --output=tmuxed ./entry-point.ts
      - name: setting chmod
        run: chmod +x tmuxed
      - name: uploading artifact
        uses: actions/upload-artifact@v2
        with:
          name: tmuxed-${{ matrix.deno-target }}
          path: tmuxed

  make-release:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      # This pulls from the CREATE RELEASE step in this job, referencing its ID
      # to get its outputs object, which include a `upload_url`. It's then output from
      # this job so that the uploaders below can do their thing.
      #
      # See this blog post for more info:
      # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      upload_url: ${{ steps.create_release.outputs.upload_url }} 
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  upload-artifacts:
    runs-on: ubuntu-latest
    needs: make-release
    strategy:
      matrix:
        deno-target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Get tag ref
        id: get-ref
        uses: ankitvgupta/ref-to-tag-action@v1
        with:
          ref: ${{ github.ref }}
          head_ref: ${{ github.head_ref }}
      - name: Check out code
        uses: actions/checkout@v2
      - name: caching deps
        run: deno cache --lock=deps-lock.json deps.ts
      - name: compiling executable
        run: deno compile --allow-read --allow-run --target=${{ matrix.deno-target }} --output=tmuxed ./entry-point.ts
      - name: setting chmod
        run: chmod +x tmuxed
      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.make-release.outputs.upload_url }}
          asset_path: ./tmuxed
          asset_name: tmuxed-$VERSION-${{ matrix.deno_target }}
          asset_content_type: application/octet-stream
